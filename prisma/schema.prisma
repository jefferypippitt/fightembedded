generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  email         String    @unique
  name          String?
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  Account       Account[]
  Session       Session[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  expiresAt             DateTime?
  password              String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Athlete {
  id                String   @id @default(cuid())
  name              String
  gender            String
  age               Int
  weightDivision    String
  country           String
  imageUrl          String?
  wins              Int
  losses            Int
  draws             Int
  followers         Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  poundForPoundRank Int
  rank              Int
  winsByKo          Int
  winsBySubmission  Int
  retired           Boolean? @default(false)
}

model Event {
  id          String      @id @default(cuid())
  name        String
  date        DateTime
  venue       String
  location    String
  mainEvent   String
  coMainEvent String?
  imageUrl    String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  status      EventStatus @default(UPCOMING)

  @@map("event")
}

enum EventStatus {
  UPCOMING
  COMPLETED
  CANCELLED
}
